1.注册功能sql语句错误
    问题：由于注册页面输入的信息与实际数据库相对比并不是所有的字段都
          都拥有，只需要账号，密码和email即可注册，最开始使用了insert
          into插值，没有考虑到只需要插入一部分值而报错
    解决：使用insert into sc_user (uname,upwd,email) values (?,?,?)
          “?”防止sql注入。
    提升：数据库的基本操作忘的有点过分，需要重新记忆
2.node.js使用不熟练
    问题：在node.js中获取值时，req.params.uname写成了req.param.uname
    解决：使用正确的语句。
    需要提升：node.js使用不熟练，需要抽时间好好回顾。
3.查询注册时用户名是否重复的ajax接口
    问题：在查询接口中的判断语句：判断输入的值是用户名注册还是手机注册
          的时候，判断返回的judeg的值为boolean类型，自己的思路获取的
          true与false与实际获取的相反，导致功能无效 
    解决：在判断是否为用户名注册的时候判断条件为“!judege”，判断是否为
          手机注册的时候判断条件为“judge”
    提升：虽然很多时候觉得自己的思维没有错，但是在现阶段写js的过程中还
          是边写边打桩最为妥当
4.注册的ajax接口
    (1) 问题：不管用户输入了什么都可以完成注册
        解决：在接口中添加判断,一定要所有的信息填写完毕并且所注册的账号
              不存在时才能完成注册
        提升：注册功能的判断考虑不够完善，可多多参考网上资料，完善自己
              的思维
    (2) 问题：在手机注册注册的判断中，出现警示框弹出信息与需求不符
        解决：定义的时候发生错误，修改定义
        提升：由于与用户注册相差不大，自己选择了复制并修改的方案，导致
              到后来错了以后找问题也花了挺久，现阶段为提升阶段，不应该
              偷懒，要一步一脚的慢慢打。
5.ajax接口中成功以后跳转
    问题：自己不知道如何在ajax请求成功后进行页面的跳转
    解决：询问同学，使用location.href=“ip地址”完成此功能
    提升：完善了自己之前不知道ajax页面跳转功能的缺陷，ajax还需很大的提升
6.html页面头部搜索框
    问题：在缩小页面的时候，头部搜索框部分并没有因为页面缩小而隐藏，反而
          被移动到下面。
    解决：清除浮动
    提升：每次在使用浮动的时候，写完float:left以后，都先在上面把父元素
          清除浮动。 
7.弹性布局带来的影响
    问题：在页面末端使用了一下弹性布局，但是在页面缩小时出现bug，当前
          元素因为位置不足而被拉长
    解决：使用 flex-wrap: wrap进行换行
    提升：弹性布局使用的太少，掌握程度不够，需多多练习
8. 头部鼠标移入事件
    问题：鼠标移入以后没有显示二级菜单栏，后台报错 Cannot set property 
          'onmouseover' of undefined
    解决：在页面尾部导入js文件，不在页面头部导入
    提升：由于页面渲染的先后顺序问题导致，css的导入建议在head中，js的导入
          建议在body后
9.滚轮事件
    问题：写完js以后页面并没有达到滚轮到一定位置以后出现头部搜索框
    解决：在function前添加window.onscroll(滚轮监听事件)
    提升：第一次了解并完成了一次滚轮监听事件
10.倒计时秒杀
    问题：当倒计时结束以后进入无线弹窗的死循环
    解决：清除定时器
    提升：实战中使用定时器以后没有清除成功，经过此次以后更加了解了定时器一些
11.秒杀专场左右小轮播
    (1) 问题：获取元素外边距并打印以后结果为undefined，更改外边距失败
        解决：询问老师，解决问题
        提升：获取元素外边距与更改外边的dom并不是同一个，能获取的不能更改，能
              更改的不能获取，自己百度了很多千篇一律自己却没有去理解，解决完
              以后觉得百度的时候需要更加仔细的去看网上的一些东西，而不是只为了
              解决当下去寻找答案，需要尽可能的去理解这个问题。
    (2) 问题：左右轮播过程中可以无限往下走，并不会因为没有内容而停止
        解决：添加一个类名进行判断，如果含有类名则可以继续轮播，如果到达顶部或
              最后，移除类名
        提升：了解并实现了通过是否含有类名去约束一些功能
